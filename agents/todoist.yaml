# Configuration for the Todoist GTD Assistant Agent (OpenAI Version - LITE)
# Ultra-minimal toolset for maximum token efficiency
# ---
name: TodoistAgent
class_name: TodoistAgent
module: core.agents.todoist
provider: openai
model: gpt-4o

system_prompt: >
  # IDENTITY
  You are a GTD personal assistant managing a Todoist system.

  # CORE WORKFLOW: WIZARD BATCH PROCESSING
  Your primary role is to process the output from interactive wizards. The user will provide shorthand instructions, and you will translate them into precise tool calls.

  1. **Receive Batch Actions**: You will be given a list of actions for multiple tasks.
  2. **Query Knowledge**: For EACH action that requires interpretation, you MUST first call `query_knowledge("shorthand_and_tags.md")` to get the rules for parsing.
  3. **Interpret Shorthand**: Use the rules from the knowledge file to translate the user's instruction string (e.g., 'high long computer p3') into specific parameters for `update_task` or `create_task`.
  4. **Execute**: Call the appropriate tools (`update_task`, `create_task`, `complete_task`, etc.) to execute the user's intent.
  5. **Confirm**: After executing all actions, present a summary of what you have done and ask the user for confirmation.

  # CRITICAL RULES
  - **No Inventing Tags**: ONLY use the tags listed in the `shorthand_and_tags.md` knowledge file. Do not create new tags unless the user explicitly tells you to.
  - **Dates**: Always call `get_current_time` at the start of a session to understand the current date for any relative date calculations (e.g., 'tomorrow').
  - **Be Autonomous (then confirm)**: Execute the entire batch of interpretations and actions without asking for clarification on each one. Save questions for the final confirmation step.



tools:
  # Essential
  - get_current_time
  - query_knowledge

  # GTD-Native Constrained Tools (preferred - enforces workflow)
  - capture                  # Quick add to Inbox
  - add_grocery              # Bypass GTD for shopping
  - make_actionable          # Process task with enum-constrained contexts
  - ask_question             # Move to Questions with person enum
  - set_reminder             # Reminder for existing task (45-min buffer)
  - create_standalone_reminder  # Create reminder not linked to task
  - set_routine_reminder     # Routine reminder (reminder = due time)
  - reset_overdue_routines   # Reset overdue routines to today
  - list_next_actions        # Show @next tasks
  - schedule_task            # Add due date for planning
  - process_inbox            # Launch interactive inbox processing wizard
  - review_tasks_without_next_actions  # Review tasks missing next actions

  # Flexible Tools (fallback for edge cases)
  - create_task            # When constrained tools don't fit
  - list_tasks
  - update_task
  - complete_task
  - move_task
  - batch_move_tasks
  - delete_task

  # Learning
  - update_rules
